<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="/theme/custom.css"?>
<svg viewBox="0 0 600 300" xmlns="http://www.w3.org/2000/svg">
    <title>Vertices Step Diagram (using Index)</title>
    <desc>
        Diagram illustrating the 'vertices' step using an index:
        - Shows a graph with vertices A(Person), B(Product), C(Person), D(Review).
        - Represents the step with the code `graph.walk().vertices(VertexIndex::person())`.
        - Shows the resulting walker state where only vertices A and C (labeled "Person") are highlighted.
        - Vertices B and D are not highlighted, indicating they were filtered out by the index lookup.
    </desc>
    <defs>
        <!-- Filter for Dropshadow -->
        <filter id="dropshadow" x="-20%" y="-20%" width="140%" height="140%">
            <feGaussianBlur in="SourceAlpha" stdDeviation="1"/>
            <feOffset dx="1" dy="1" result="offsetblur"/>
            <feFlood flood-color="var(--graph-bg)" flood-opacity="0.7"/>
            <feComposite in2="offsetblur" operator="in"/>
            <feMerge>
                <feMergeNode/>
                <feMergeNode in="SourceGraphic"/>
            </feMerge>
        </filter>

        <!-- Marker Definitions -->
        <marker id="arrowhead" class="marker-arrowhead marker-base" markerWidth="8" markerHeight="6" refX="7" refY="3"
                orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L8,3 L0,6 Z"/>
        </marker>
        <marker id="arrowhead-pointer" class="marker-arrowhead-pointer marker-base" markerWidth="8" markerHeight="6"
                refX="7" refY="3" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L8,3 L0,6 Z"/>
        </marker>
        <marker id="arrowhead-scan" class="marker-arrowhead-scan marker-base" markerWidth="6" markerHeight="4" refX="5"
                refY="2" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L6,2 L0,4 Z"/>
        </marker>
        <marker id="arrowhead-active" class="marker-arrowhead-active marker-base" markerWidth="10" markerHeight="7"
                refX="9" refY="3.5" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L10,3.5 L0,7 Z"/>
        </marker>
        <marker id="arrowhead-visited" class="marker-arrowhead-visited marker-base" markerWidth="10" markerHeight="7"
                refX="9" refY="3.5" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L10,3.5 L0,7 Z"/>
        </marker>
        <marker id="arrowhead-path" class="marker-arrowhead-path marker-base" markerWidth="10" markerHeight="7" refX="9"
                refY="3.5" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L10,3.5 L0,7 Z"/>
        </marker>
        <marker id="arrowhead-pointer" class="marker-arrowhead-pointer marker-base" markerWidth="8" markerHeight="6"
                refX="7" refY="3" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L8,3 L0,6 Z"/>
        </marker>
    </defs>

    <text x="300" y="30" class="step-label halo" text-anchor="middle">Walker Step: <tspan class="code">vertices()</tspan></text>

    <!-- Step Representation -->
    <g id="step-representation" class="step-label" transform="translate(30, 150)">
        <!-- Reduced font size explicitly, adjusted position -->
        <text x="100" y="-10" text-anchor="middle" font-size="var(--font-size-small)">graph.walk()</text>
        <text class="code" x="100" y="10" text-anchor="middle" font-size="var(--font-size-small)">.vertices(VertexIndex::person())</text>
        <!-- Removed step arrow line, will use index pointers instead -->
    </g>

    <!-- Index Pointers -->
    <g id="index-pointers-group">
        <!-- Pointers from step text to selected nodes A and C -->
        <path class="index-pointer" d="M 200 160 Q 250 100 313 83"
              marker-end="url(#arrowhead-pointer)"/> <!-- To A -->
        <path class="index-pointer" d="M 200 160 Q 250 200 313 213"
              marker-end="url(#arrowhead-pointer)"/> <!-- To C -->
    </g>

    <!-- Resulting Walker State -->
    <g id="graph-result" transform="translate(250, 50)"> <!-- Shifted left -->
         <text class="step-label" x="120" y="0" text-anchor="middle">Resulting Walker State</text>

        <!-- Edges (Rendered first, not highlighted) -->
        <g class="edge directed" id="edge-A-B">
            <line x1="100" y1="50" x2="220" y2="50" marker-end="url(#arrowhead)"/>
        </g>
        <g class="edge directed" id="edge-C-A">
            <path d="M 80 160 Q 50 105 80 70" marker-end="url(#arrowhead)"/>
        </g>
        <g class="edge directed" id="edge-C-D">
            <line x1="100" y1="180" x2="220" y2="180" marker-end="url(#arrowhead)"/>
        </g>
        <g class="edge directed" id="edge-D-B">
            <path d="M 240 160 Q 270 105 240 70" marker-end="url(#arrowhead)"/>
        </g>

        <!-- Nodes (Only Person nodes highlighted) -->
        <g class="node highlighted" id="node-A" transform="translate(80, 50)">
            <circle r="20"></circle><text class="node-label">A</text>
            <text class="property-text halo" y="30">Person</text>
        </g>
        <g class="node" id="node-B" transform="translate(240, 50)">
            <circle r="20"></circle><text class="node-label">B</text>
            <text class="property-text halo" y="30">Product</text>
        </g>
        <g class="node highlighted" id="node-C" transform="translate(80, 180)">
            <circle r="20"></circle><text class="node-label">C</text>
            <text class="property-text halo" y="30">Person</text>
        </g>
        <g class="node" id="node-D" transform="translate(240, 180)">
            <circle r="20"></circle><text class="node-label">D</text>
            <text class="property-text halo" y="30">Review</text>
        </g>
    </g>
</svg>
