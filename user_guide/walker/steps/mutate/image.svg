<?xml-stylesheet type="text/css" href="../../../../theme/custom.css"?>
<svg viewBox="0 0 600 400" xmlns="http://www.w3.org/2000/svg">
    <title>Mutate Step Diagram</title>
    <desc>
        Diagram illustrating the 'mutate' step:
        - Shows an input stream of elements A, B, C.
        - The 'mutate' step processes each element, applying a callback function.
        - The callback modifies the elements in the graph (shown by A', B', C').
        - The step returns the count of processed elements (usize).
        - Illustrates the in-place nature of the mutation.
    </desc>
    <defs>
        <!-- Marker Definitions -->
        <marker id="arrowhead" class="marker-arrowhead marker-base" markerWidth="8" markerHeight="6"
                refX="7" refY="3" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L8,3 L0,6 Z"/>
        </marker>
        <marker id="arrowhead-visited" class="marker-arrowhead-visited marker-base" markerWidth="8" markerHeight="6"
                refX="7" refY="3" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L8,3 L0,6 Z"/>
        </marker>
        <marker id="arrowhead-path" class="marker-arrowhead-path marker-base" markerWidth="8" markerHeight="6"
                refX="7" refY="3" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L8,3 L0,6 Z"/>
        </marker>
        <marker id="arrowhead-pointer" class="marker-arrowhead-pointer marker-base" markerWidth="8" markerHeight="6"
                refX="7" refY="3" orient="auto" markerUnits="strokeWidth">
            <path d="M0,0 L8,3 L0,6 Z"/>
        </marker>
    </defs>

    <!-- Input Stream -->
    <text class="step-label" x="150" y="20" text-anchor="middle">Input Elements</text>
    <line class="edge directed" x1="50" y1="100" x2="250" y2="100" marker-end="url(#arrowhead)"/>

    <!-- Input Elements -->
    <g class="node highlighted" transform="translate(80, 100)">
        <circle r="15"></circle>
        <text class="node-label">A</text>
        <text class="property-text" y="25">val=1</text>
    </g>
    <g class="node highlighted" transform="translate(140, 100)">
        <circle r="15"></circle>
        <text class="node-label">B</text>
        <text class="property-text" y="25">val=2</text>
    </g>
    <g class="node highlighted" transform="translate(200, 100)">
        <circle r="15"></circle>
        <text class="node-label">C</text>
        <text class="property-text" y="25">val=3</text>
    </g>

    <!-- Mutate Step Box -->
    <rect x="250" y="75" width="100" height="50" rx="5" ry="5"
          fill="var(--accent-primary)" stroke="var(--node-stroke)" stroke-width="var(--stroke-width-normal)"/>
    <text class="step-label" x="300" y="105" text-anchor="middle" fill="var(--text-color-light)">mutate</text>
    <text class="property-text" x="300" y="130" text-anchor="middle">(callback)</text>

    <!-- Processing Arrows -->
    <path class="edge directed" d="M 350,100 Q 425,50 500,100" marker-end="url(#arrowhead-path)" stroke-dasharray="4 2"
          stroke="var(--accent-secondary)"/>
    <path class="edge directed" d="M 500,100 Q 425,150 350,100" marker-end="url(#arrowhead-path)" stroke-dasharray="4 2"
          stroke="var(--accent-secondary)"/>
    <text class="property-text" x="425" y="45" text-anchor="middle">Process &amp; Mutate</text>
    <text class="property-text" x="425" y="165" text-anchor="middle">Graph State</text>


    <!-- Graph State After Mutation -->
    <text class="step-label" x="450" y="20" text-anchor="middle">Mutated Elements (In Graph)</text>
    <!-- Mutated Elements -->
    <g class="node path" transform="translate(430, 100)"> <!-- Use 'path' class to indicate change -->
        <circle r="15"></circle>
        <text class="node-label">A'</text>
        <text class="property-text" y="25">val=10</text>
    </g>
    <g class="node path" transform="translate(500, 100)"> <!-- Use 'path' class -->
        <circle r="15"></circle>
        <text class="node-label">B'</text>
        <text class="property-text" y="25">val=20</text>
    </g>
    <g class="node path" transform="translate(570, 100)"> <!-- Use 'path' class -->
        <circle r="15"></circle>
        <text class="node-label">C'</text>
        <text class="property-text" y="25">val=30</text>
    </g>

    <!-- Return Value -->
    <g transform="translate(300, 220)">
        <rect x="-75" y="-25" width="150" height="50" rx="5" ry="5"
              fill="var(--accent-secondary)" fill-opacity="0.15"
              stroke="var(--accent-secondary)" stroke-width="1.5"/>
        <text x="0" y="0" text-anchor="middle" font-weight="bold" fill="var(--accent-secondary)">Returns: usize</text>
        <text x="0" y="20" text-anchor="middle" font-family="monospace" fill="var(--accent-secondary)">
            3
        </text>
        <text x="0" y="45" class="text-color-muted" font-size="12px" text-anchor="middle">Count of processed elements
        </text>
        <text x="0" y="60" class="text-color-muted" font-size="12px" text-anchor="middle">Terminates Walker</text>
    </g>
    <line class="index-pointer" x1="300" y1="150" x2="300" y2="195" marker-end="url(#arrowhead-pointer)"/>


    <!-- Legend -->
    <g transform="translate(0, 300)">
        <rect class="index-box" x="25" y="0" width="550" height="80"/>
        <text class="index-title" x="300" y="20">Legend</text>

        <g transform="translate(60, 45)">
            <g class="node highlighted">
                <circle r="10"></circle>
            </g>
            <text x="20" y="0" dominant-baseline="middle" font-size="var(--font-size-small)">
                Element before mutation (e.g., A, val=1)
            </text>
        </g>

        <g transform="translate(320, 45)">
            <g class="node path">
                <circle r="10"></circle>
            </g> <!-- Use 'path' class -->
            <text x="20" y="0" dominant-baseline="middle" font-size="var(--font-size-small)">
                Element after mutation (e.g., A', val=10)
            </text>
        </g>

        <g transform="translate(60, 65)">
            <rect x="-10" y="-5" width="20" height="10" fill="var(--accent-secondary)" fill-opacity="0.15"
                  stroke="var(--accent-secondary)" rx="2"/>
            <text x="20" y="0" dominant-baseline="middle" font-size="var(--font-size-small)">
                Return value (count)
            </text>
        </g>
    </g>
</svg>
